#!/usr/bin/env node

'use strict';

if (process.argv.length > 2) {
    var command = process.argv[2],
        fs = require('fs'),
        path = require('path'),
        readline = require('readline'),
        ProjectJs = require('../project'),
        projectJs = new ProjectJs();

    // version command
    if (command === "version" || command === "--version" || 
        command === "--v" || command === "-v") {
        console.log(projectJs.getVersion());

    // build command
    } else if (command === "build") {
        projectJs.buildProject();

    // init command
    } else if (command === "init") {
        var initInterface = readline.createInterface({
                input: process.stdin,
                output: process.stdout
            }),
            options = { "root": process.cwd() };

        initInterface.question("Base namespace for this project: ", function(baseNs) {
            if (baseNs === null || baseNs === "" || baseNs.length === 0) {
                console.log("Base namespace is required");
            } else {
                options["namespace"] = baseNs;
                initInterface.question("[OPTIONAL] Name a src folder? ", function(srcDir) {
                    options["src"] = srcDir;
                    initInterface.question("[OPTIONAL] Name a build folder? ", function(buildDir) {
                        if (buildDir !== null && buildDir !== "" && buildDir.length > 0) {
                            options["build"] = buildDir;
                        }
                        projectJs.init(options);
                        initInterface.close();
                    });
                })
            }
        });

    // create new class
    } else if (command === "newclass") {
        var options = { "path": process.cwd() };
        if (process.argv.length > 3) {
            options["name"] = process.argv[3];
            projectJs.createNewClass(options);
        } else {
            var ncInterface = readline.createInterface({
                input: process.stdin,
                output: process.stdout
            });
            ncInterface.question("New class name: ", function(nm) {
                options["name"] = nm;
                projectJs.createNewClass(options);
                ncInterface.close();
            });
        }

    // create new directory or package (not that it matters much)
    } else if (command === "newdir" || command === "newpackage") {
        if (process.argv.length > 3) {
            var newPackName = process.argv[3];
            fs.mkdirSync(newPackName);
        } else {
            var ndInterface = readline.createInterface({
                input: process.stdin,
                output: process.stdout
            });
            ndInterface.question("New package name: ", function(packName) {
                fs.mkdirSync(packName);
                ncInterface.close();
            });
        }
    }
}
